############################TEXTURE EXTRACTION##################################
#
#
#This script extracts textural information from each segment from the image to add more information for the OBIA
#Any questions or improvements can be emailed to Ximena Tagle: xtagle@iiap.org.pe
#
#

###SET WD
#setwd("/home/xtagle/UAV/Results/") #Linux
setwd("G:/My Drive/Monan/Taller_Oct/") #Windows


###LOAD LIBRARIES
library(raster)
library(maptools)
library(rgeos)
library(rgrass7)
library(spgrass7)
library(RCurl)
library(sf)
library(Hmisc)
library(rgdal)

###LOAD FUNCTIONS
source("./lib/load.to.grass.R")
source("./lib/make.group.grass.R")
source("./lib/object.features.R")
source("./lib/polygonizeR.R")

####LOAD IMAGE
image.path="./1_Clip/JH_1.tif"
image=stack(image.path)
plotRGB(image)


####LOAD SEGMENTS
segments_v<-readOGR("./2_Segmentation/segments_JH_1_5001.shp")
plot(segments_v, add=T)


segment_r.path=("./2_Segmentation/segments_JH_1_5001.tif")
segments_r=raster(segment_r.path)
plot(segments_r)


###INITIATE GRASS-R CONNECTION
initGRASS("C:/Program Files/GRASS GIS 7.2.2", tempdir(), override=TRUE) #path to GRASS


#LOAD IMAGE TO GRASS
load.to.grass(image.path,"RGB")


#SET REGION PARAMETER TO MATCH RGB
execGRASS("g.region", parameters= list(raster="RGB.red"))
execGRASS("g.region",flags="p") #check


#MAKE GROUP 
make.group.grass(c("RGB.red","RGB.green","RGB.blue"),"group-1")


##CALCULATE OBJECT FEATURES                     
features=object.features(segments_r,    #Segments in raster format
                         segments_v,    #Segments in vector format
                         statistics=T,    #Logical: If ==TRUE the statistics listed in stat.methods are calculated
                         stat.rasters=c("RGB.red","RGB.blue","RGB.green"),  #Character vector of the grass-names of the rasters for which the
                         #statistics listed in stat.methods are calculated. 
                         stat.methods=c("mean"),  #Options: mean,sd,max,min,median ...
                         texture=T,       #Logical: If ==TRUE the texture parameters listed in text.methods are calculated
                         text.rasters=c("RGB.red","RGB.blue","RGB.green"),  #Character vector of the grass-names of the rasters for which the 
                         #texture parameters listed in text.methods are calculated
                         text.methods=c("entr"),  #Options: asm, contrast, corr, var, idm, sa, se, sv, entr, dv, de, moc1, moc2
                         #See  http://grass.osgeo.org/grass70/manuals/r.texture.html for more info
                         text.window=3,   #The size of moving window (odd and >= 3)
                         text.stats=c("mean"),    #How should the texture (which is pixel-based) Options: mean,sd,max,min,median ...
                         shape=T,         #Logical: If ==TRUE shape parameters are calculated
                         rasters.output=T, #Logical: If ==TRUE raster outputs are created in the return
                         texture.output=T #Logical: If ==TRUE raster outputs are created for the original
                         #texture (pixel-based) images
)

#EXPORT RASTER FILES
for (i in 1:length(features[[2]])){
  writeRaster(features[[2]][[i]],paste0("./3_Texture_ext/Btext_VEN01_5001",names(features[[2]])[i],".tif"),datatype="FLT4S")
}

#EXPORT VECTOR FILES
#for (i in 1:length(features[[2]])){
#  gdal_polygonizeR(features[[2]][[i]], paste0("./3_Texture_ext/Btext_VEN01_5001", names(features[[2]])[i]))
#}

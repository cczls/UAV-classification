############################TRAINING SET##################################
#
#
#This script assigns the textural information from each segment to each defined class
#Any questions or improvements can be emailed to Ximena Tagle: xtagle@iiap.org.pe
#
#

###SET WD
#setwd("/home/xtagle/UAV/Results/") #Linux
setwd("G:/My Drive/Monan/Taller_Oct/") #Windows

###LOAD LIBRARIES
library(raster)
library(maptools)
library(rgdal)
library(sp)

####LOAD LAYER_STACK
raster_stack<-stack("./layers_JH_1_5001.tif")
names(raster_stack)<-c("area",  "compactness",  "fd",   "length", "mean_entr_RGB.blue",  "mean_entr_RGB.green",
                       "mean_entr_RGB.red", "mean_RGB.green",
                       "mean_RGB.red", "mean_sv_RGB.blue",  "mean_sv_RGB.green",  
                       "mean_sv_RGB.red") 
###LOAD SEGMENTS
segments<-readOGR(dsn="./2_Segmentation", layer="segments_JH_1_5001")
segments<-CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")

###LOAD CLASS VECTOR
#training_data<-readOGR("./5_Training/Training_classes.shp") To use when you have GPS points with ground information
#classess<-over(segments, training_data)

classes<-readOGR(dsn="./5_Training", layer="segments_JH_1_5001_class") #if the training points were obtained from another source
head(classes@data)
classes.df<-as.data.frame(classes@data)
head(classes.df)
summary(classes.df)


####LOAD IMAGE
image.path="./1_Clip/JH_1.tif"
image=stack(image.path)

###VISUALIZE
plotRGB(image)
plot(segments, bg="transparent", add=T)


###SELECT ONLY SEGMENTS ASSIGNED
classess<- dplyr::filter(segments, complete.cases(label))


###REDUCE INFO BY SAMPLING
points<-spsample(segments, n=500, type="clustered", nclustesr=5, iter=10)#only extracts coordinates... 
points.df<-as.data.frame(points)
head(points)
plot(points)


###EXTRACT LAYER STACK VALUES
Valuesd<- raster::extract(raster_stack, points, df=T,method='simple', fun=mean, sp=T)
head(Valuesd@data)
names(Valuesd@data)

###EXTRACT INFO CLASSSES
class<-over(Valuesd, classes)
class.df<-as.data.frame(class)
head(class)

class.f<-cbind(points.df,class.df)
head(class.f)

species<-cbind(class.f,Valuesd@data)
head(species)

coordinates(species) <- ~ x1+x2
head(species@data)

###EXPORT VECTOR AS .shp
writeOGR(species,"./5_Training", layer="training", driver="ESRI Shapefile")


###EXPORT VECTOR AS A RASTER
train<-rasterize(species, layer_stack, filename="./5_Training",
                 na.rm=T, overwrite=T)


###EXPORT DATA AS .csv
class.df<-as.data.frame(species)
plot(class.df)
summary(class.df)
write.table(class.df,file="./5_Training/Training_data.csv",quote=T,sep=",", na = "NA",
            dec = ".", row.names = T,col.names = T)


